// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using com.assignment.Infrastructure;

#nullable disable

namespace com.assignment.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20230116170232_ChangingDataType")]
    partial class ChangingDataType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("com.assignment.Domain.Models.EmpQualification", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<double>("Marks")
                        .HasColumnType("float")
                        .HasColumnName("marks");

                    b.Property<int>("QId")
                        .HasColumnType("int")
                        .HasColumnName("q_id");

                    b.HasKey("EmployeeId")
                        .HasName("pk_emp_qualification");

                    b.HasIndex("QId")
                        .HasDatabaseName("ix_emp_qualification_q_id");

                    b.ToTable("emp_qualification", (string)null);
                });

            modelBuilder.Entity("com.assignment.Domain.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2")
                        .HasColumnName("dob");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employee_name");

                    b.Property<string>("EntryBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("entry_by");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("entry_date");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<double>("Salary")
                        .HasColumnType("float")
                        .HasColumnName("salary");

                    b.HasKey("EmployeeId")
                        .HasName("pk_employee");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("com.assignment.Domain.Models.QualificationList", b =>
                {
                    b.Property<int>("QId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("q_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QId"));

                    b.Property<string>("QName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("q_name");

                    b.HasKey("QId")
                        .HasName("pk_qualification_list");

                    b.ToTable("qualification_list", (string)null);
                });

            modelBuilder.Entity("com.assignment.Domain.Models.EmpQualification", b =>
                {
                    b.HasOne("com.assignment.Domain.Models.Employee", "Employee")
                        .WithMany("EmpQualifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_emp_qualification_employee_employee_id");

                    b.HasOne("com.assignment.Domain.Models.QualificationList", "QualificationList")
                        .WithMany("EmpQualification")
                        .HasForeignKey("QId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_emp_qualification_qualification_lists_qualification_list_temp_id");

                    b.Navigation("Employee");

                    b.Navigation("QualificationList");
                });

            modelBuilder.Entity("com.assignment.Domain.Models.Employee", b =>
                {
                    b.Navigation("EmpQualifications");
                });

            modelBuilder.Entity("com.assignment.Domain.Models.QualificationList", b =>
                {
                    b.Navigation("EmpQualification");
                });
#pragma warning restore 612, 618
        }
    }
}
